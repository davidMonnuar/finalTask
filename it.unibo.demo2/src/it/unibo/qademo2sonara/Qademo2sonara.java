/* Generated by AN DISI Unibo */ 
/*
This code is generated only ONCE
*/
package it.unibo.qademo2sonara;
import java.io.BufferedReader;

import it.unibo.is.interfaces.IActivity;
import it.unibo.is.interfaces.IIntent;
import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.QActorContext;

public class Qademo2sonara extends AbstractQademo2sonara implements IActivity { 
	protected BufferedReader readerC;
	
	public Qademo2sonara(String actorId, QActorContext myCtx, IOutputEnvView outEnvView )  throws Exception{
		super(actorId, myCtx, outEnvView);
	}
	public void startSonarC(){
  		try {
  			println("startSonarC"   );
			Process p = Runtime.getRuntime().exec("sudo ./SonarAlone");
			readerC   = new BufferedReader(new java.io.InputStreamReader(p.getInputStream()));
			println("Process in C STARTED "  +  readerC);
		} catch (Exception e) {
 			e.printStackTrace();
		}		
	}	
	public void getDistanceFromSonar(){
		try {
			String dist = readerC.readLine();			
			println("getDistanceFromSonar " + dist  );		
			this.addRule("d("+dist+")");
		} catch (Exception e) {
 			e.printStackTrace();
 			
		}
	}
	protected void addInputPanel(int size){
	}

	public void addCmd()
	{
		outEnvView.getEnv().addCmdPanel("50", new String [] {"50"}, this);
		outEnvView.getEnv().addCmdPanel("100", new String [] {"100"}, this);
		outEnvView.getEnv().addCmdPanel("150", new String [] {"150"}, this);
		outEnvView.getEnv().addCmdPanel("200", new String [] {"200"}, this);
	}
	
	public void execAction(String cmd) {
		
		 this.emit("local_sonara", "sonara("+cmd+")");
	 }
	@Override
	public void execAction() {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void execAction(IIntent input) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public String execActionWithAnswer(String cmd) {
		// TODO Auto-generated method stub
		return null;
	}
}
