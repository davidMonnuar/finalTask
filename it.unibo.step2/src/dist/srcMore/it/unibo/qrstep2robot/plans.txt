plan(1,init, sentence(true,move(print("#######Start Robot########")),'','' ))
plan(2,init, sentence(true,move( switchplan(receiveCmd) ),'','' ))
plan(1,receiveCmd, sentence(true,receiveMsg(msg(cmd,dispatch,qastep2console,RECEIVER,cmd( X)SEQNUM)),'switch_mode','switchMode' ))
plan(2,receiveCmd, sentence(true,msgswitch(cmd, cmd( start) , move( switchplan(receiveSonarADistance) )),'','' ))
plan(3,receiveCmd, sentence(true,repeatplan(0) ,'','' ))
plan(1,receiveMoveCmd, sentence(true,receiveMsg(msg(cmd,dispatch,qastep2console,RECEIVER,cmd( X)SEQNUM)),'switch_mode,obstacle,alarm','switchMode,userStop,userStop' ))
plan(2,receiveMoveCmd, sentence(true,msgswitch(cmd, cmd( robotforward) , move( switchplan(userForward) )),'','' ))
plan(3,receiveMoveCmd, sentence(true,msgswitch(cmd, cmd( robotright) , move( switchplan(userRight) )),'','' ))
plan(4,receiveMoveCmd, sentence(true,msgswitch(cmd, cmd( robotleft) , move( switchplan(userLeft) )),'','' ))
plan(5,receiveMoveCmd, sentence(true,msgswitch(cmd, cmd( robotstop) , move( switchplan(userStop) )),'','' ))
plan(6,receiveMoveCmd, sentence(true,repeatplan(0) ,'','' ))
plan(1,switchMode, sentence(true,eventswitch(switch_mode, »mode( user), move( switchplan(userMode) ) ),'','' ))
plan(2,switchMode, sentence(true,eventswitch(switch_mode, »mode( auto), move( switchplan(autonomusMode) ) ),'','' ))
plan(3,switchMode, sentence(true,repeatplan(0) ,'','' ))
plan(1,userMode, sentence(true,move(print("#######Robot User Mode########")),'','' ))
plan(2,userMode, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(3,userMode, sentence(true,move(robotStop(0,0,0)),'','' ))
plan(4,userMode, sentence(true,move( switchplan(receiveMoveCmd) ),'','' ))
plan(1,autonomusMode, sentence(true,move(print("#######Robot Autonomus Mode########")),'','' ))
plan(2,autonomusMode, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(3,autonomusMode, sentence(true,move(actorOp(saveTotMoveOnProlog)),'','' ))
plan(4,autonomusMode, sentence(true,move(robotLeft(60,0,3500)),'','' ))
plan(5,autonomusMode, sentence(true,move(robotStop(0,0,0)),'','' ))
plan(6,autonomusMode, sentence(true,move( switchplan(returnToStartPoint) ),'','' ))
plan(1,returnToStartPoint, sentence(-  totMove( 0) ,move( switchplan(receiveCmd) ),'','' ))
plan(2,returnToStartPoint, sentence(-  totMove( Y) ,move(solve,valueTot( Y),0,""),'','' ))
plan(3,returnToStartPoint, sentence( curMove( f,V,T),move(print(f( V,T))),'','' ))
plan(4,returnToStartPoint, sentence(-  curMove( f,V,T) ,move(robotForward(Integer.parseInt(V),0,Integer.parseInt(T))),'obstacle,alarm,switch_mode','handleObstacleReturn,stopRobot,switchMode' ))
plan(5,returnToStartPoint, sentence( curMove( l,V,T),move(print(l( V,T))),'','' ))
plan(6,returnToStartPoint, sentence(-  curMove( l,V,T) ,move(robotLeft(Integer.parseInt(V),0,Integer.parseInt(T))),'obstacle,alarm,switch_mode','handleObstacleReturn,stopRobot,switchMode' ))
plan(7,returnToStartPoint, sentence( curMove( r,V,T),move(print(r( V,T))),'','' ))
plan(8,returnToStartPoint, sentence(-  curMove( r,V,T) ,move(robotRight(Integer.parseInt(V),0,Integer.parseInt(T))),'obstacle,alarm,switch_mode','handleObstacleReturn,stopRobot,switchMode' ))
plan(9,returnToStartPoint, sentence(true,move(actorOp(decI)),'','' ))
plan(10,returnToStartPoint, sentence(true,repeatplan(0) ,'','' ))
plan(1,receiveSonarADistance, sentence(true,receiveMsg(msg(sonar,dispatch,qastep2sonara,RECEIVER,sonar( sonara,qrstep2robot,D)SEQNUM)),'alarm,obstacle,switch_mode','stopRobot,handleObstacle,switchMode' ))
plan(2,receiveSonarADistance, sentence(true,msgswitch(sonar, sonar( sonara,qrstep2robot,F) , move(print(distdia( F)))),'','' ))
plan(3,receiveSonarADistance, sentence(true,msgswitch(sonar, sonar( sonara,qrstep2robot,S) , addRule( distA( S) )),'','' ))
plan(4,receiveSonarADistance, sentence(true,msgswitch(sonar, sonar( sonara,qrstep2robot,D) , move( switchplan(startRobot) )),'','' ))
plan(5,receiveSonarADistance, sentence(true,repeatplan(0) ,'','' ))
plan(1,receiveSonarBDistance, sentence(true,receiveMsg(msg(sonar,dispatch,qastep2sonarb,RECEIVER,sonar( sonarb,qrstep2robot,D)SEQNUM)),'alarm,obstacle,switch_mode','stopRobot,handleObstacle,switchMode' ))
plan(2,receiveSonarBDistance, sentence(true,msgswitch(sonar, sonar( sonarb,qrstep2robot,F) , move(print(distinizialedib( F)))),'','' ))
plan(3,receiveSonarBDistance, sentence(true,msgswitch(sonar, sonar( sonarb,qrstep2robot,F) , move(solve,distB( F),0,"")),'','' ))
plan(4,receiveSonarBDistance, sentence( minore( B,A),move(print(lt( A,B))),'','' ))
plan(5,receiveSonarBDistance, sentence(-  minore( B,A) ,move( switchplan(leftRobot) ),'','' ))
plan(6,receiveSonarBDistance, sentence( maggiore( B,A),move(print(gt( A,B))),'','' ))
plan(7,receiveSonarBDistance, sentence(-  maggiore( B,A) ,move( switchplan(rightRobot) ),'','' ))
plan(8,receiveSonarBDistance, sentence( uguale( A,B),move(print(eq( A,B))),'','' ))
plan(9,receiveSonarBDistance, sentence(-  uguale( A,B) ,move( switchplan(stopRobot) ),'','' ))
plan(10,receiveSonarBDistance, sentence(true,repeatplan(0) ,'','' ))
plan(1,valueSonarBDistance, sentence(true,receiveMsg(msg(sonar,dispatch,qastep2sonarb,RECEIVER,sonar( sonarb,qrstep2robot,D)SEQNUM)),'alarm,obstacle,switch_mode','stopRobot,handleObstacleReturn,switchMode' ))
plan(2,valueSonarBDistance, sentence(true,msgswitch(sonar, sonar( sonarb,qrstep2robot,F) , move(print(distdib( F)))),'','' ))
plan(3,valueSonarBDistance, sentence(true,msgswitch(sonar, sonar( sonarb,qrstep2robot,F) , move(solve,distB( F),0,"")),'','' ))
plan(4,valueSonarBDistance, sentence( uguale( A,B),move(print(ug( A,B))),'','' ))
plan(5,valueSonarBDistance, sentence(-  uguale( A,B) ,move( switchplan(stopRobot) ),'','' ))
plan(6,valueSonarBDistance, sentence(true,repeatplan(0) ,'','' ))
plan(1,startRobot, sentence(true,move(print("#######Robot go to point B#######")),'','' ))
plan(2,startRobot, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(3,startRobot, sentence(true,move(robotForward(60,0,0)),'alarm,obstacle,switch_mode','stopRobot,handleObstacle,switchMode' ))
plan(4,startRobot, sentence(true,move(actorOp(loadInfoMove( f))),'','' ))
plan(5,startRobot, sentence(true,move( switchplan(receiveSonarBDistance) ),'','' ))
plan(1,leftRobot, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(2,leftRobot, sentence(true,move(actorOp(loadInfoMove( l))),'','' ))
plan(3,leftRobot, sentence(true,move(robotLeft(60,0,1750)),'','' ))
plan(4,leftRobot, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(5,leftRobot, sentence(true,move(print("#######Robot LEFT#######")),'','' ))
plan(6,leftRobot, sentence(true,move(robotForward(60,0,0)),'alarm,obstacle,switch_mode','stopRobot,handleObstacleReturn,switchMode' ))
plan(7,leftRobot, sentence(true,move(actorOp(loadInfoMove( f))),'','' ))
plan(8,leftRobot, sentence(true,move( switchplan(valueSonarBDistance) ),'','' ))
plan(1,rightRobot, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(2,rightRobot, sentence(true,move(actorOp(loadInfoMove( r))),'','' ))
plan(3,rightRobot, sentence(true,move(robotRight(60,0,1500)),'','' ))
plan(4,rightRobot, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(5,rightRobot, sentence(true,move(print("#######Robot RIGHT#######")),'','' ))
plan(6,rightRobot, sentence(true,move(robotForward(60,0,0)),'alarm,obstacle,switch_mode','stopRobot,handleObstacleReturn,switchMode' ))
plan(7,rightRobot, sentence(true,move(actorOp(loadInfoMove( f))),'','' ))
plan(8,rightRobot, sentence(true,move( switchplan(valueSonarBDistance) ),'','' ))
plan(1,stopRobot, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(2,stopRobot, sentence(true,move(robotStop(0,0,0)),'','' ))
plan(3,stopRobot, sentence(true,move(print("#######Robot Stop#######")),'','' ))
plan(4,stopRobot, sentence(true,delay( 100000) ,'','' ))
plan(5,stopRobot, sentence(true,not here PlanMove,'','' ))
plan(1,userForward, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(2,userForward, sentence(true,move(robotForward(60,0,0)),'alarm,obstacle','userStop,userStop' ))
plan(3,userForward, sentence(true,move(actorOp(loadInfoMove( f))),'','' ))
plan(4,userForward, sentence(true,move( switchplan(receiveMoveCmd) ),'','' ))
plan(1,userLeft, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(2,userLeft, sentence(true,move(robotLeft(60,0,0)),'alarm,obstacle','userStop,userStop' ))
plan(3,userLeft, sentence(true,move(actorOp(loadInfoMove( l))),'','' ))
plan(4,userLeft, sentence(true,move( switchplan(receiveMoveCmd) ),'','' ))
plan(1,userRight, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(2,userRight, sentence(true,move(robotRight(60,0,0)),'alarm,obstacle','userStop,userStop' ))
plan(3,userRight, sentence(true,move(actorOp(loadInfoMove( r))),'','' ))
plan(4,userRight, sentence(true,move( switchplan(receiveMoveCmd) ),'','' ))
plan(1,userStop, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(2,userStop, sentence(true,move(robotStop(0,0,0)),'','' ))
plan(3,userStop, sentence(true,move( switchplan(receiveMoveCmd) ),'','' ))
plan(1,handleObstacleReturn, sentence(true,move(print("#######!!!WARNING OBSTACLE!!!#######")),'','' ))
plan(2,handleObstacleReturn, sentence(true,move(robotStop(0,0,0)),'','' ))
plan(3,handleObstacleReturn, sentence(true,move( switchplan(stopRobot) ),'','' ))
plan(1,handleObstacle, sentence(true,move(print("#######!!!WARNING OBSTACLE!!!#######")),'','' ))
plan(2,handleObstacle, sentence(true,move(actorOp(saveMoveOnProlog)),'','' ))
plan(3,handleObstacle, sentence(true,move(robotStop(0,0,0)),'','' ))
plan(4,handleObstacle, sentence(true,delay( 3000) ,'alarm','stopRobot' ))
plan(5,handleObstacle, sentence(true,senseEvent(500,"obstacle","continue"),'','' ))
plan(6,handleObstacle, sentence(true,eventswitch(obstacle, »obstacle( D), move( switchplan(handleFixedObstacle) ) ),'','' ))
plan(7,handleObstacle, sentence(true,move( switchplan(handleMobileObstacle) ),'','' ))
plan(1,handleMobileObstacle, sentence(true,move(print("#######!!!MOBILE OBSTACLE!!!#######")),'','' ))
plan(2,handleMobileObstacle, sentence(true,move( switchplan(startRobot) ),'','' ))
plan(1,handleFixedObstacle, sentence(true,move(print("#######!!!FIXED OBSTACLE!!!#######")),'','' ))
plan(2,handleFixedObstacle, sentence(true,move(solve,checkAdist( 125),0,""),'','' ))
plan(3,handleFixedObstacle, sentence( minore( A,MAX),move(print(lt( A,MAX))),'','' ))
plan(4,handleFixedObstacle, sentence(-  minore( A,MAX) ,move( switchplan(avoidFixedObstacleRight) ),'','' ))
plan(5,handleFixedObstacle, sentence( maggiore( A,MAX),move(print(gt( A,MAX))),'','' ))
plan(6,handleFixedObstacle, sentence(-  maggiore( A,MAX) ,move( switchplan(avoidFixedObstacleLeft) ),'','' ))
plan(7,handleFixedObstacle, sentence( uguale( A,MAX),move(print(eq( A,MAX))),'','' ))
plan(8,handleFixedObstacle, sentence(-  uguale( A,MAX) ,move( switchplan(avoidFixedObstacleLeft) ),'','' ))
plan(1,avoidFixedObstacleLeft, sentence(true,move(print("#######!!!TRY AVOID OBSTACLE ON THE LEFT!!!#######")),'','' ))
plan(2,avoidFixedObstacleLeft, sentence(true,move(robotLeft(60,0,1750)),'','' ))
plan(3,avoidFixedObstacleLeft, sentence(true,move(actorOp(loadInfoAvoidObstacleMove( l))),'','' ))
plan(4,avoidFixedObstacleLeft, sentence(true,move(robotForward(60,0,2500)),'alarm,obstacle','stopRobot,changeToRight' ))
plan(5,avoidFixedObstacleLeft, sentence(true,move(actorOp(saveTempInfoAvoidObstacleMove)),'','' ))
plan(6,avoidFixedObstacleLeft, sentence(true,move(robotRight(60,0,1500)),'','' ))
plan(7,avoidFixedObstacleLeft, sentence(true,senseEvent(500,"obstacle","continue"),'','' ))
plan(8,avoidFixedObstacleLeft, sentence(true,eventswitch(obstacle, »obstacle( D), repeatplan(0)  ),'','' ))
plan(9,avoidFixedObstacleLeft, sentence(true,move(actorOp(saveAvoidObstacleMoveOnProlog)),'','' ))
plan(10,avoidFixedObstacleLeft, sentence(true,move( switchplan(startRobot) ),'','' ))
plan(1,avoidFixedObstacleRight, sentence(true,move(actorOp(loadInfoAvoidObstacleMove( r))),'','' ))
plan(2,avoidFixedObstacleRight, sentence(true,move(print("#######!!!TRY AVOID OBSTACLE ON THE RIGHT!!!#######")),'','' ))
plan(3,avoidFixedObstacleRight, sentence(true,move(robotRight(60,0,1500)),'','' ))
plan(4,avoidFixedObstacleRight, sentence(true,move(robotForward(60,0,2500)),'alarm,obstacle','stopRobot,changeToLeft' ))
plan(5,avoidFixedObstacleRight, sentence(true,move(robotLeft(60,0,1750)),'','' ))
plan(6,avoidFixedObstacleRight, sentence(true,senseEvent(500,"obstacle","continue"),'','' ))
plan(7,avoidFixedObstacleRight, sentence(true,eventswitch(obstacle, »obstacle( D), repeatplan(0)  ),'','' ))
plan(8,avoidFixedObstacleRight, sentence(true,move(actorOp(saveAvoidObstacleMoveOnProlog)),'','' ))
plan(9,avoidFixedObstacleRight, sentence(true,move( switchplan(startRobot) ),'','' ))
plan(1,changeToLeft, sentence(true,move(print("#######!!!CHANGE ON LEFT!!!#######")),'','' ))
plan(2,changeToLeft, sentence(true,move(actorOp(changeAvoidObstacleMove( l))),'','' ))
plan(3,changeToLeft, sentence(true,delay( 2000) ,'alarm','stopRobot' ))
plan(4,changeToLeft, sentence(true,move(robotLeft(60,0,1750)),'','' ))
plan(5,changeToLeft, sentence(true,move( switchplan(avoidFixedObstacleLeft) ),'','' ))
plan(1,changeToRight, sentence(true,move(print("#######!!!CHANGE ON RIGHT!!!#######")),'','' ))
plan(2,changeToRight, sentence(true,move(actorOp(changeAvoidObstacleMove( r))),'','' ))
plan(3,changeToRight, sentence(true,delay( 2000) ,'alarm','stopRobot' ))
plan(4,changeToRight, sentence(true,move(robotRight(60,0,1500)),'','' ))
plan(5,changeToRight, sentence(true,move( switchplan(avoidFixedObstacleRight) ),'','' ))
